
import unittest
import ROOT

from spectrum.spectrum import PtAnalyzer
from spectrum.input import Input

class TestSpectrum(unittest.TestCase):

	def testPi0SpectrumLHC16l(self):
		# These are values calculated by standard algorithm.
		# Make sure that you have the same copy of LHC16l.root file. 
		# sha 256 sum: db8e0f8517f3f094b9c039f3cb263211c8c781bd1395a404ff961355e4c6dc7c
		# This is to test the code after refactoring.

		# TODO: update/remove this test?
		nominal = [[0.13787896931171417, 0.1375068575143814, 0.13770444691181183, 0.13786467909812927, 0.13791771233081818, 0.13793569803237915, 0.137956440448761, 0.1379116326570511, 0.13767461478710175, 0.1374320685863495, 0.13780614733695984, 0.13818906247615814, 0.13793855905532837, 0.13805058598518372, 0.1380731463432312, 0.13779105246067047, 0.13753919303417206, 0.13783599436283112, 0.13747425377368927, 0.13739167153835297, 0.13708335161209106, 0.1370801329612732, 0.13769525289535522, 0.13743580877780914, 0.13654766976833344, 0.13902348279953003, 0.1412978172302246, 0.1411667913198471, 0.14012078940868378, 0.13512961566448212, 0.13870926201343536, 0.14999999105930328], [0.007137827575206757, 0.006609075237065554, 0.006331233773380518, 0.0058440109714865685, 0.005613185930997133, 0.005358736962080002, 0.004891467280685902, 0.004446270409971476, 0.004571766126900911, 0.00463727954775095, 0.00434536999091506, 0.004240073729306459, 0.0042319814674556255, 0.004116154741495848, 0.004000000189989805, 0.004006377421319485, 0.004362574778497219, 0.004000000189989805, 0.004226445686072111, 0.004497446119785309, 0.004884809255599976, 0.005482016131281853, 0.004000000189989805, 0.004444481804966927, 0.0050057340413331985, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.005475596059113741, 0.004000000189989805, 0.004000000189989805, 0.0299999862909317], [34.53648376464844, 21.15943145751953, 21.13873863220215, 19.01941680908203, 16.684345245361328, 13.897156715393066, 11.087737083435059, 8.801447868347168, 6.956245422363281, 5.479331970214844, 4.431017875671387, 3.6306259632110596, 2.865086317062378, 2.3620622158050537, 1.9689050912857056, 1.5137313604354858, 0.6868559122085571, 0.5991328954696655, 0.5910072922706604, 0.539822518825531, 0.2650071978569031, 0.24504661560058594, 0.1720772236585617, 0.1471944898366928, 0.15615886449813843, 0.1598602682352066, 0.11462583392858505, 0.09904731065034866, 0.04011997580528259, 0.0202911589294672, 0.013820013962686062, 0.0007610006723552942], [1.9539161920547485, 1.4723817110061646, 1.5976454019546509, 1.573819637298584, 1.6130214929580688, 1.4275964498519897, 1.4485158920288086, 1.3017319440841675, 1.2308743000030518, 1.2725281715393066, 1.2182466983795166, 1.2329012155532837, 1.65343177318573, 1.4746875762939453, 2.934922456741333, 2.160484790802002, 1.614441990852356, 2.0318541526794434, 1.563211441040039, 1.5147693157196045, 1.2354458570480347, 0.8308684229850769, 0.8009541630744934, 0.5574982166290283, 0.6100628972053528, 1.0678131580352783, 0.903374969959259, 0.4889838397502899, 0.37116703391075134, 0.26991695165634155, 0.21752877533435822, 0.5458781123161316], [1.1260364055633545, 1.1932600736618042, 1.2845654487609863, 1.3815813064575195, 1.4380043745040894, 1.4757084846496582, 1.4920494556427002, 1.5225684642791748, 1.5809327363967896, 1.639175295829773, 1.7236448526382446, 1.7726776599884033, 1.7715226411819458, 1.7547706365585327, 1.769626259803772, 1.7186192274093628, 1.835828185081482, 1.7754745483398438, 1.898909330368042, 1.9256954193115234, 2.0911099910736084, 2.2083723545074463, 1.8794810771942139, 1.9389435052871704, 1.4988222122192383, 1.5043907165527344, 1.5493525266647339, 1.797926664352417, 1.9409008026123047, 1.9924235343933105, 1.861781358718872, -0.06327447295188904]]


		second = PtAnalyzer(Input('input-data/LHC16l.root', 'PhysTender').read(), label = 'Mixing', mode = 'q').quantities()
		actual = [ [ h.GetBinContent(i) for i in range(1, h.GetNbinsX())] for h in second]

		for a, b, c in zip(nominal, actual, second):
				print 'Checking ', c.GetName()
				for aa, bb in zip(a, b): self.assertAlmostEqual(aa, bb)