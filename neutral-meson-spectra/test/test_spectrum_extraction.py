
import unittest
import ROOT
import sys

from spectrum.spectrum import PtAnalyzer
from spectrum.input import Input

class TestSpectrum(unittest.TestCase):


	def setUp(self):
		# Different values in some pt-bins can be explained by limited statistics in those bins.
		#

		# Important:
		# This one should be set explicitely otherwise the test will fail
		# Because this global variable is set to Minuit2 in other tests
		ROOT.TVirtualFitter.SetDefaultFitter('Minuit')
		
		linux = [[0.1386951506137848, 0.13813678920269012, 0.13800007104873657, 0.13786235451698303, 0.13774797320365906, 0.1376812905073166, 0.13761459290981293, 0.1376112997531891, 0.13757899403572083, 0.1374923288822174, 0.13750921189785004, 0.13758234679698944, 0.13759209215641022, 0.1376691460609436, 0.13763751089572906, 0.13750502467155457, 0.13757167756557465, 0.13784506916999817, 0.1377226561307907, 0.13754327595233917, 0.1377720832824707, 0.13781678676605225, 0.13779477775096893, 0.137859508395195, 0.13838456571102142, 0.138118714094162, 0.13684584200382233, 0.1375063806772232, 0.13860780000686646, 0.13808836042881012, 0.13843348622322083, 0.13693977892398834], [0.006629643961787224, 0.0062658051028847694, 0.005880473647266626, 0.005372521001845598, 0.005120580550283194, 0.00499281520023942, 0.0047544147819280624, 0.0046371109783649445, 0.004638569429516792, 0.004606946371495724, 0.004398465622216463, 0.004200695548206568, 0.0041993469931185246, 0.004162637982517481, 0.004021369386464357, 0.004000000189989805, 0.0040479060262441635, 0.004027227405458689, 0.0040511880069971085, 0.004000000189989805, 0.004000000189989805, 0.00442446768283844, 0.004538239911198616, 0.004436700604856014, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.004294047597795725, 0.004000000189989805], [15.127413749694824, 26.309249877929688, 34.39850616455078, 38.04835510253906, 37.4356689453125, 34.621986389160156, 30.780683517456055, 26.32088851928711, 22.00882911682129, 17.922752380371094, 14.647518157958984, 12.065147399902344, 9.993718147277832, 8.162052154541016, 6.656470775604248, 5.714401721954346, 2.6359848976135254, 2.2227673530578613, 1.2684317827224731, 1.0694165229797363, 0.5818911194801331, 0.5791534781455994, 0.36962246894836426, 0.41466060280799866, 0.19981878995895386, 0.17300797998905182, 0.13398782908916473, 0.13591277599334717, 0.06469984352588654, 0.0472627691924572, 0.04947037622332573, 0.015215500257909298], [0.9429054260253906, 1.764819860458374, 2.5719082355499268, 2.7676377296447754, 3.9811301231384277, 4.0918097496032715, 3.634960889816284, 2.9863157272338867, 2.5719985961914062, 2.6998679637908936, 2.621354818344116, 2.326010227203369, 2.191012382507324, 1.9199533462524414, 1.8111698627471924, 1.390494465827942, 1.20401132106781, 1.4948537349700928, 0.9422993659973145, 1.0162910223007202, 1.2896543741226196, 1.132556676864624, 1.0382050275802612, 1.1166950464248657, 0.8246821761131287, 0.959242045879364, 0.7736321091651917, 0.5675520896911621, 0.4945327043533325, 0.5897102952003479, 0.4259798228740692, 0.5117694735527039], [1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858, 1.100000023841858], [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]]
		macos = [[0.13850188255310059, 0.13791368901729584, 0.13775815069675446, 0.13761039078235626, 0.1374797821044922, 0.13740836083889008, 0.13733801245689392, 0.13734140992164612, 0.13733044266700745, 0.13722273707389832, 0.13723504543304443, 0.13733528554439545, 0.137334942817688, 0.13737817108631134, 0.13735465705394745, 0.13725216686725616, 0.13729789853096008, 0.13753753900527954, 0.13744144141674042, 0.1372239589691162, 0.13753533363342285, 0.13759322464466095, 0.13749785721302032, 0.13751672208309174, 0.13815398514270782, 0.13779579102993011, 0.13668538630008698, 0.13733690977096558, 0.13841727375984192, 0.13777600228786469, 0.13823598623275757, 0.13672225177288055], [0.006827044300734997, 0.006494111381471157, 0.006134319119155407, 0.005636404734104872, 0.005412579048424959, 0.005286516156047583, 0.0050330571830272675, 0.004913054872304201, 0.004893855657428503, 0.004882749170064926, 0.004699035082012415, 0.004480034578591585, 0.004501861520111561, 0.004493230953812599, 0.004319288302212954, 0.004269483964890242, 0.004354872275143862, 0.004374242853373289, 0.004342412110418081, 0.004306994844228029, 0.004174024797976017, 0.004648503847420216, 0.004790650214999914, 0.00471684243530035, 0.0040000006556510925, 0.004177008755505085, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.004000000189989805, 0.0042168921791017056, 0.004000000189989805], [14.397618293762207, 25.29273223876953, 33.23427963256836, 36.96959686279297, 36.67646408081055, 33.97105407714844, 30.162748336791992, 25.794231414794922, 21.53965187072754, 17.637765884399414, 14.435836791992188, 11.857071876525879, 9.882637977600098, 8.10377311706543, 6.588637828826904, 5.643283843994141, 2.5930445194244385, 2.206894874572754, 1.2553757429122925, 1.058980941772461, 0.5721558928489685, 0.5670304894447327, 0.36637255549430847, 0.4114648103713989, 0.1972304880619049, 0.17208175361156464, 0.1359165459871292, 0.13374803960323334, 0.06509973853826523, 0.04828018322587013, 0.04947977513074875, 0.015206478536128998], [1.0083376169204712, 1.2622606754302979, 1.562532663345337, 1.3788681030273438, 1.746329426765442, 1.8381056785583496, 1.9116533994674683, 1.669730544090271, 1.5682169198989868, 1.368722677230835, 1.5145394802093506, 1.575566053390503, 1.3206079006195068, 1.1412217617034912, 1.235540509223938, 1.0248939990997314, 0.9854839444160461, 1.150822401046753, 0.8456722497940063, 0.9279680252075195, 1.308756947517395, 1.1893106698989868, 1.0405346155166626, 1.147997498512268, 0.8264385461807251, 0.9409478306770325, 0.7074681520462036, 0.552791178226471, 0.46071502566337585, 0.5282081365585327, 0.41551369428634644, 0.5025198459625244], [1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781, 1.4930000305175781], [1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814, 1.5959999561309814]]
		self.nominal = macos if 'darwin' in sys.platform else linux


	def testPi0SpectrumLHC16(self):
		# These are values calculated by standard algorithm.
		# Make sure that you have the same copy of LHC16.root file. 
		# sha 256 sum: a340256c4138894412ea87df53e5813fd92c3f90bd0e06883a18bef49ebf4c90
		# This is to test the code after refactoring.

		second = PtAnalyzer(Input('input-data/LHC16.root', 'PhysTender').read(), label = 'testsignal', mode = 'q').quantities()
		actual = [ [ h.GetBinContent(i) for i in range(1, h.GetNbinsX())] for h in second]

		for a, b, c in zip(self.nominal, actual, second):
				print 'Checking ', c.GetName()
				for aa, bb in zip(a, b): self.assertAlmostEqual(aa, bb)